//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("myschemaModel", "FK_account_1", "account_group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.account_group), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.account), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_limit_1", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBManagerMDI.account), "limit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.limit), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_user_account_relation_2", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBManagerMDI.account), "user_account_relation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.user_account_relation), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_account_group_1", "organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.organisation), "account_group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.account_group), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_rating_1", "account_group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.account_group), "rating", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.rating), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_routing_rule_1", "account_group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.account_group), "routing_rule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.routing_rule), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_instrument_2", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.currency), "instrument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.instrument), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_instrument_3", "exchange", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBManagerMDI.exchange), "instrument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.instrument), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_routing_rule_2", "exchange", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.exchange), "routing_rule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.routing_rule), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_instrument_1", "instrument_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBManagerMDI.instrument_type), "instrument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.instrument), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_GroupID", "instrument_type_group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.instrument_type_group), "instrument_type", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.instrument_type), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_limit_2", "instrument_type", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBManagerMDI.instrument_type), "limit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.limit), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_rating_2", "instrument_type", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.instrument_type), "rating", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.rating), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_user_instrument_subscription_2", "instrument_type_group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DBManagerMDI.instrument_type_group), "user_instrument_subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.user_instrument_subscription), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_user_account_relation_1", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBManagerMDI.user), "user_account_relation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.user_account_relation), true)]
[assembly: EdmRelationshipAttribute("myschemaModel", "FK_user_instrument_subscription_1", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DBManagerMDI.user), "user_instrument_subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DBManagerMDI.user_instrument_subscription), true)]

#endregion

namespace DBManagerMDI
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class myschemaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new myschemaEntities object using the connection string found in the 'myschemaEntities' section of the application configuration file.
        /// </summary>
        public myschemaEntities() : base("name=myschemaEntities", "myschemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new myschemaEntities object.
        /// </summary>
        public myschemaEntities(string connectionString) : base(connectionString, "myschemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new myschemaEntities object.
        /// </summary>
        public myschemaEntities(EntityConnection connection) : base(connection, "myschemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> user
        {
            get
            {
                if ((_user == null))
                {
                    _user = base.CreateObjectSet<user>("user");
                }
                return _user;
            }
        }
        private ObjectSet<user> _user;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account> account
        {
            get
            {
                if ((_account == null))
                {
                    _account = base.CreateObjectSet<account>("account");
                }
                return _account;
            }
        }
        private ObjectSet<account> _account;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account_group> account_group
        {
            get
            {
                if ((_account_group == null))
                {
                    _account_group = base.CreateObjectSet<account_group>("account_group");
                }
                return _account_group;
            }
        }
        private ObjectSet<account_group> _account_group;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<currency> currency
        {
            get
            {
                if ((_currency == null))
                {
                    _currency = base.CreateObjectSet<currency>("currency");
                }
                return _currency;
            }
        }
        private ObjectSet<currency> _currency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<exchange> exchange
        {
            get
            {
                if ((_exchange == null))
                {
                    _exchange = base.CreateObjectSet<exchange>("exchange");
                }
                return _exchange;
            }
        }
        private ObjectSet<exchange> _exchange;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<instrument> instrument
        {
            get
            {
                if ((_instrument == null))
                {
                    _instrument = base.CreateObjectSet<instrument>("instrument");
                }
                return _instrument;
            }
        }
        private ObjectSet<instrument> _instrument;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<instrument_type> instrument_type
        {
            get
            {
                if ((_instrument_type == null))
                {
                    _instrument_type = base.CreateObjectSet<instrument_type>("instrument_type");
                }
                return _instrument_type;
            }
        }
        private ObjectSet<instrument_type> _instrument_type;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<instrument_type_group> instrument_type_group
        {
            get
            {
                if ((_instrument_type_group == null))
                {
                    _instrument_type_group = base.CreateObjectSet<instrument_type_group>("instrument_type_group");
                }
                return _instrument_type_group;
            }
        }
        private ObjectSet<instrument_type_group> _instrument_type_group;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<limit> limit
        {
            get
            {
                if ((_limit == null))
                {
                    _limit = base.CreateObjectSet<limit>("limit");
                }
                return _limit;
            }
        }
        private ObjectSet<limit> _limit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<organisation> organisation
        {
            get
            {
                if ((_organisation == null))
                {
                    _organisation = base.CreateObjectSet<organisation>("organisation");
                }
                return _organisation;
            }
        }
        private ObjectSet<organisation> _organisation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rating> rating
        {
            get
            {
                if ((_rating == null))
                {
                    _rating = base.CreateObjectSet<rating>("rating");
                }
                return _rating;
            }
        }
        private ObjectSet<rating> _rating;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<routing_rule> routing_rule
        {
            get
            {
                if ((_routing_rule == null))
                {
                    _routing_rule = base.CreateObjectSet<routing_rule>("routing_rule");
                }
                return _routing_rule;
            }
        }
        private ObjectSet<routing_rule> _routing_rule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user_account_relation> user_account_relation
        {
            get
            {
                if ((_user_account_relation == null))
                {
                    _user_account_relation = base.CreateObjectSet<user_account_relation>("user_account_relation");
                }
                return _user_account_relation;
            }
        }
        private ObjectSet<user_account_relation> _user_account_relation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user_instrument_subscription> user_instrument_subscription
        {
            get
            {
                if ((_user_instrument_subscription == null))
                {
                    _user_instrument_subscription = base.CreateObjectSet<user_instrument_subscription>("user_instrument_subscription");
                }
                return _user_instrument_subscription;
            }
        }
        private ObjectSet<user_instrument_subscription> _user_instrument_subscription;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser(user user)
        {
            base.AddObject("user", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the account EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccount(account account)
        {
            base.AddObject("account", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the account_group EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccount_group(account_group account_group)
        {
            base.AddObject("account_group", account_group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the currency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocurrency(currency currency)
        {
            base.AddObject("currency", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the exchange EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToexchange(exchange exchange)
        {
            base.AddObject("exchange", exchange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the instrument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinstrument(instrument instrument)
        {
            base.AddObject("instrument", instrument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the instrument_type EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinstrument_type(instrument_type instrument_type)
        {
            base.AddObject("instrument_type", instrument_type);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the instrument_type_group EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinstrument_type_group(instrument_type_group instrument_type_group)
        {
            base.AddObject("instrument_type_group", instrument_type_group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the limit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolimit(limit limit)
        {
            base.AddObject("limit", limit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the organisation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorganisation(organisation organisation)
        {
            base.AddObject("organisation", organisation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the rating EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorating(rating rating)
        {
            base.AddObject("rating", rating);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the routing_rule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorouting_rule(routing_rule routing_rule)
        {
            base.AddObject("routing_rule", routing_rule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user_account_relation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser_account_relation(user_account_relation user_account_relation)
        {
            base.AddObject("user_account_relation", user_account_relation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the user_instrument_subscription EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTouser_instrument_subscription(user_instrument_subscription user_instrument_subscription)
        {
            base.AddObject("user_instrument_subscription", user_instrument_subscription);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="sODNLV">Initial value of the SODNLV property.</param>
        /// <param name="liquidity">Initial value of the Liquidity property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static account Createaccount(global::System.Int64 id, global::System.String code, global::System.Decimal sODNLV, global::System.Decimal liquidity, global::System.DateTime lastModified, global::System.Int64 typeID)
        {
            account account = new account();
            account.ID = id;
            account.Code = code;
            account.SODNLV = sODNLV;
            account.Liquidity = liquidity;
            account.LastModified = lastModified;
            account.TypeID = typeID;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupID;
        partial void OnGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int64> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int64> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Account1
        {
            get
            {
                return _Account1;
            }
            set
            {
                OnAccount1Changing(value);
                ReportPropertyChanging("Account1");
                _Account1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Account1");
                OnAccount1Changed();
            }
        }
        private global::System.String _Account1;
        partial void OnAccount1Changing(global::System.String value);
        partial void OnAccount1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AllocAccount
        {
            get
            {
                return _AllocAccount;
            }
            set
            {
                OnAllocAccountChanging(value);
                ReportPropertyChanging("AllocAccount");
                _AllocAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AllocAccount");
                OnAllocAccountChanged();
            }
        }
        private global::System.String _AllocAccount;
        partial void OnAllocAccountChanging(global::System.String value);
        partial void OnAllocAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClearingAccount
        {
            get
            {
                return _ClearingAccount;
            }
            set
            {
                OnClearingAccountChanging(value);
                ReportPropertyChanging("ClearingAccount");
                _ClearingAccount = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClearingAccount");
                OnClearingAccountChanged();
            }
        }
        private global::System.String _ClearingAccount;
        partial void OnClearingAccountChanging(global::System.String value);
        partial void OnClearingAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SODNLV
        {
            get
            {
                return _SODNLV;
            }
            set
            {
                OnSODNLVChanging(value);
                ReportPropertyChanging("SODNLV");
                _SODNLV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SODNLV");
                OnSODNLVChanged();
            }
        }
        private global::System.Decimal _SODNLV;
        partial void OnSODNLVChanging(global::System.Decimal value);
        partial void OnSODNLVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BeginBalance
        {
            get
            {
                return _BeginBalance;
            }
            set
            {
                OnBeginBalanceChanging(value);
                ReportPropertyChanging("BeginBalance");
                _BeginBalance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BeginBalance");
                OnBeginBalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _BeginBalance;
        partial void OnBeginBalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnBeginBalanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Liquidity
        {
            get
            {
                return _Liquidity;
            }
            set
            {
                OnLiquidityChanging(value);
                ReportPropertyChanging("Liquidity");
                _Liquidity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Liquidity");
                OnLiquidityChanged();
            }
        }
        private global::System.Decimal _Liquidity;
        partial void OnLiquidityChanging(global::System.Decimal value);
        partial void OnLiquidityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateTime;
        partial void OnCreateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int64 _TypeID;
        partial void OnTypeIDChanging(global::System.Int64 value);
        partial void OnTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_account_1", "account_group")]
        public account_group account_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_account_1", "account_group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_account_1", "account_group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account_group> account_groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_account_1", "account_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account_group>("myschemaModel.FK_account_1", "account_group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_limit_1", "limit")]
        public EntityCollection<limit> limit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<limit>("myschemaModel.FK_limit_1", "limit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<limit>("myschemaModel.FK_limit_1", "limit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_account_relation_2", "user_account_relation")]
        public EntityCollection<user_account_relation> user_account_relation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_account_relation>("myschemaModel.FK_user_account_relation_2", "user_account_relation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_account_relation>("myschemaModel.FK_user_account_relation_2", "user_account_relation", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="account_group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account_group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account_group object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static account_group Createaccount_group(global::System.Int32 id, global::System.String groupName, global::System.DateTime lastModified)
        {
            account_group account_group = new account_group();
            account_group.ID = id;
            account_group.GroupName = groupName;
            account_group.LastModified = lastModified;
            return account_group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrganisationID
        {
            get
            {
                return _OrganisationID;
            }
            set
            {
                OnOrganisationIDChanging(value);
                ReportPropertyChanging("OrganisationID");
                _OrganisationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganisationID");
                OnOrganisationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrganisationID;
        partial void OnOrganisationIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrganisationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentAccountID
        {
            get
            {
                return _ParentAccountID;
            }
            set
            {
                OnParentAccountIDChanging(value);
                ReportPropertyChanging("ParentAccountID");
                _ParentAccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentAccountID");
                OnParentAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentAccountID;
        partial void OnParentAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentAccountIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_account_1", "account")]
        public EntityCollection<account> account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("myschemaModel.FK_account_1", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("myschemaModel.FK_account_1", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_account_group_1", "organisation")]
        public organisation organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organisation>("myschemaModel.FK_account_group_1", "organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organisation>("myschemaModel.FK_account_group_1", "organisation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organisation> organisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organisation>("myschemaModel.FK_account_group_1", "organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<organisation>("myschemaModel.FK_account_group_1", "organisation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_rating_1", "rating")]
        public EntityCollection<rating> rating
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rating>("myschemaModel.FK_rating_1", "rating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rating>("myschemaModel.FK_rating_1", "rating", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_routing_rule_1", "routing_rule")]
        public EntityCollection<routing_rule> routing_rule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<routing_rule>("myschemaModel.FK_routing_rule_1", "routing_rule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<routing_rule>("myschemaModel.FK_routing_rule_1", "routing_rule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new currency object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static currency Createcurrency(global::System.Int64 id, global::System.String code, global::System.DateTime lastModified)
        {
            currency currency = new currency();
            currency.ID = id;
            currency.Code = code;
            currency.LastModified = lastModified;
            return currency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FxRate
        {
            get
            {
                return _FxRate;
            }
            set
            {
                OnFxRateChanging(value);
                ReportPropertyChanging("FxRate");
                _FxRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FxRate");
                OnFxRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _FxRate;
        partial void OnFxRateChanging(Nullable<global::System.Decimal> value);
        partial void OnFxRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_instrument_2", "instrument")]
        public EntityCollection<instrument> instrument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instrument>("myschemaModel.FK_instrument_2", "instrument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instrument>("myschemaModel.FK_instrument_2", "instrument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="exchange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class exchange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new exchange object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static exchange Createexchange(global::System.Int64 id, global::System.String code, global::System.DateTime lastModified)
        {
            exchange exchange = new exchange();
            exchange.ID = id;
            exchange.Code = code;
            exchange.LastModified = lastModified;
            return exchange;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderTypes
        {
            get
            {
                return _OrderTypes;
            }
            set
            {
                OnOrderTypesChanging(value);
                ReportPropertyChanging("OrderTypes");
                _OrderTypes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderTypes");
                OnOrderTypesChanged();
            }
        }
        private global::System.String _OrderTypes;
        partial void OnOrderTypesChanging(global::System.String value);
        partial void OnOrderTypesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_instrument_3", "instrument")]
        public EntityCollection<instrument> instrument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instrument>("myschemaModel.FK_instrument_3", "instrument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instrument>("myschemaModel.FK_instrument_3", "instrument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_routing_rule_2", "routing_rule")]
        public EntityCollection<routing_rule> routing_rule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<routing_rule>("myschemaModel.FK_routing_rule_2", "routing_rule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<routing_rule>("myschemaModel.FK_routing_rule_2", "routing_rule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="instrument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class instrument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new instrument object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="exchangeID">Initial value of the ExchangeID property.</param>
        /// <param name="decimalPlace">Initial value of the DecimalPlace property.</param>
        /// <param name="maturityDate">Initial value of the MaturityDate property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        /// <param name="dateCreated">Initial value of the dateCreated property.</param>
        public static instrument Createinstrument(global::System.Int64 id, global::System.String code, global::System.Int64 typeID, global::System.Int64 exchangeID, global::System.Int64 decimalPlace, global::System.String maturityDate, global::System.DateTime lastModified, global::System.DateTime dateCreated)
        {
            instrument instrument = new instrument();
            instrument.ID = id;
            instrument.Code = code;
            instrument.TypeID = typeID;
            instrument.ExchangeID = exchangeID;
            instrument.DecimalPlace = decimalPlace;
            instrument.MaturityDate = maturityDate;
            instrument.LastModified = lastModified;
            instrument.dateCreated = dateCreated;
            return instrument;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int64 _TypeID;
        partial void OnTypeIDChanging(global::System.Int64 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int64> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int64> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExchangeID
        {
            get
            {
                return _ExchangeID;
            }
            set
            {
                OnExchangeIDChanging(value);
                ReportPropertyChanging("ExchangeID");
                _ExchangeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeID");
                OnExchangeIDChanged();
            }
        }
        private global::System.Int64 _ExchangeID;
        partial void OnExchangeIDChanging(global::System.Int64 value);
        partial void OnExchangeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DecimalPlace
        {
            get
            {
                return _DecimalPlace;
            }
            set
            {
                OnDecimalPlaceChanging(value);
                ReportPropertyChanging("DecimalPlace");
                _DecimalPlace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DecimalPlace");
                OnDecimalPlaceChanged();
            }
        }
        private global::System.Int64 _DecimalPlace;
        partial void OnDecimalPlaceChanging(global::System.Int64 value);
        partial void OnDecimalPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MaturityDate
        {
            get
            {
                return _MaturityDate;
            }
            set
            {
                OnMaturityDateChanging(value);
                ReportPropertyChanging("MaturityDate");
                _MaturityDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MaturityDate");
                OnMaturityDateChanged();
            }
        }
        private global::System.String _MaturityDate;
        partial void OnMaturityDateChanging(global::System.String value);
        partial void OnMaturityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TickSize
        {
            get
            {
                return _TickSize;
            }
            set
            {
                OnTickSizeChanging(value);
                ReportPropertyChanging("TickSize");
                _TickSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TickSize");
                OnTickSizeChanged();
            }
        }
        private Nullable<global::System.Double> _TickSize;
        partial void OnTickSizeChanging(Nullable<global::System.Double> value);
        partial void OnTickSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> TickValue
        {
            get
            {
                return _TickValue;
            }
            set
            {
                OnTickValueChanging(value);
                ReportPropertyChanging("TickValue");
                _TickValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TickValue");
                OnTickValueChanged();
            }
        }
        private Nullable<global::System.Double> _TickValue;
        partial void OnTickValueChanging(Nullable<global::System.Double> value);
        partial void OnTickValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> StrikePrice
        {
            get
            {
                return _StrikePrice;
            }
            set
            {
                OnStrikePriceChanging(value);
                ReportPropertyChanging("StrikePrice");
                _StrikePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StrikePrice");
                OnStrikePriceChanged();
            }
        }
        private Nullable<global::System.Double> _StrikePrice;
        partial void OnStrikePriceChanging(Nullable<global::System.Double> value);
        partial void OnStrikePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IDSource
        {
            get
            {
                return _IDSource;
            }
            set
            {
                OnIDSourceChanging(value);
                ReportPropertyChanging("IDSource");
                _IDSource = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IDSource");
                OnIDSourceChanged();
            }
        }
        private global::System.String _IDSource;
        partial void OnIDSourceChanging(global::System.String value);
        partial void OnIDSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                OnSecurityIDChanging(value);
                ReportPropertyChanging("SecurityID");
                _SecurityID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityID");
                OnSecurityIDChanged();
            }
        }
        private global::System.String _SecurityID;
        partial void OnSecurityIDChanging(global::System.String value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityType
        {
            get
            {
                return _SecurityType;
            }
            set
            {
                OnSecurityTypeChanging(value);
                ReportPropertyChanging("SecurityType");
                _SecurityType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityType");
                OnSecurityTypeChanged();
            }
        }
        private global::System.String _SecurityType;
        partial void OnSecurityTypeChanging(global::System.String value);
        partial void OnSecurityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityExchange
        {
            get
            {
                return _SecurityExchange;
            }
            set
            {
                OnSecurityExchangeChanging(value);
                ReportPropertyChanging("SecurityExchange");
                _SecurityExchange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityExchange");
                OnSecurityExchangeChanged();
            }
        }
        private global::System.String _SecurityExchange;
        partial void OnSecurityExchangeChanging(global::System.String value);
        partial void OnSecurityExchangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Suspended
        {
            get
            {
                return _Suspended;
            }
            set
            {
                OnSuspendedChanging(value);
                ReportPropertyChanging("Suspended");
                _Suspended = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Suspended");
                OnSuspendedChanged();
            }
        }
        private Nullable<global::System.Int16> _Suspended;
        partial void OnSuspendedChanging(Nullable<global::System.Int16> value);
        partial void OnSuspendedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dateCreated
        {
            get
            {
                return _dateCreated;
            }
            set
            {
                OndateCreatedChanging(value);
                ReportPropertyChanging("dateCreated");
                _dateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateCreated");
                OndateCreatedChanged();
            }
        }
        private global::System.DateTime _dateCreated;
        partial void OndateCreatedChanging(global::System.DateTime value);
        partial void OndateCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_instrument_2", "currency")]
        public currency currency1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("myschemaModel.FK_instrument_2", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("myschemaModel.FK_instrument_2", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currency1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("myschemaModel.FK_instrument_2", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("myschemaModel.FK_instrument_2", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_instrument_3", "exchange")]
        public exchange exchange
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<exchange>("myschemaModel.FK_instrument_3", "exchange").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<exchange>("myschemaModel.FK_instrument_3", "exchange").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<exchange> exchangeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<exchange>("myschemaModel.FK_instrument_3", "exchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<exchange>("myschemaModel.FK_instrument_3", "exchange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_instrument_1", "instrument_type")]
        public instrument_type instrument_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_instrument_1", "instrument_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_instrument_1", "instrument_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instrument_type> instrument_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_instrument_1", "instrument_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instrument_type>("myschemaModel.FK_instrument_1", "instrument_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="instrument_type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class instrument_type : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new instrument_type object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="exchangeID">Initial value of the ExchangeID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="securityType">Initial value of the SecurityType property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        /// <param name="tickSize">Initial value of the TickSize property.</param>
        /// <param name="tickValue">Initial value of the TickValue property.</param>
        /// <param name="decimalPlace">Initial value of the DecimalPlace property.</param>
        public static instrument_type Createinstrument_type(global::System.Int64 id, global::System.Int64 currencyID, global::System.Int64 exchangeID, global::System.String code, global::System.String securityType, global::System.DateTime lastModified, global::System.Double tickSize, global::System.Double tickValue, global::System.Int64 decimalPlace)
        {
            instrument_type instrument_type = new instrument_type();
            instrument_type.ID = id;
            instrument_type.CurrencyID = currencyID;
            instrument_type.ExchangeID = exchangeID;
            instrument_type.Code = code;
            instrument_type.SecurityType = securityType;
            instrument_type.LastModified = lastModified;
            instrument_type.TickSize = tickSize;
            instrument_type.TickValue = tickValue;
            instrument_type.DecimalPlace = decimalPlace;
            return instrument_type;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private global::System.Int64 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int64 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExchangeID
        {
            get
            {
                return _ExchangeID;
            }
            set
            {
                OnExchangeIDChanging(value);
                ReportPropertyChanging("ExchangeID");
                _ExchangeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeID");
                OnExchangeIDChanged();
            }
        }
        private global::System.Int64 _ExchangeID;
        partial void OnExchangeIDChanging(global::System.Int64 value);
        partial void OnExchangeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _GroupID;
        partial void OnGroupIDChanging(Nullable<global::System.Int64> value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityType
        {
            get
            {
                return _SecurityType;
            }
            set
            {
                OnSecurityTypeChanging(value);
                ReportPropertyChanging("SecurityType");
                _SecurityType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityType");
                OnSecurityTypeChanged();
            }
        }
        private global::System.String _SecurityType;
        partial void OnSecurityTypeChanging(global::System.String value);
        partial void OnSecurityTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderTypes
        {
            get
            {
                return _OrderTypes;
            }
            set
            {
                OnOrderTypesChanging(value);
                ReportPropertyChanging("OrderTypes");
                _OrderTypes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderTypes");
                OnOrderTypesChanged();
            }
        }
        private global::System.String _OrderTypes;
        partial void OnOrderTypesChanging(global::System.String value);
        partial void OnOrderTypesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecurityExchange
        {
            get
            {
                return _SecurityExchange;
            }
            set
            {
                OnSecurityExchangeChanging(value);
                ReportPropertyChanging("SecurityExchange");
                _SecurityExchange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecurityExchange");
                OnSecurityExchangeChanged();
            }
        }
        private global::System.String _SecurityExchange;
        partial void OnSecurityExchangeChanging(global::System.String value);
        partial void OnSecurityExchangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReferencePrice
        {
            get
            {
                return _ReferencePrice;
            }
            set
            {
                OnReferencePriceChanging(value);
                ReportPropertyChanging("ReferencePrice");
                _ReferencePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferencePrice");
                OnReferencePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReferencePrice;
        partial void OnReferencePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnReferencePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TickSize
        {
            get
            {
                return _TickSize;
            }
            set
            {
                OnTickSizeChanging(value);
                ReportPropertyChanging("TickSize");
                _TickSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TickSize");
                OnTickSizeChanged();
            }
        }
        private global::System.Double _TickSize;
        partial void OnTickSizeChanging(global::System.Double value);
        partial void OnTickSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TickValue
        {
            get
            {
                return _TickValue;
            }
            set
            {
                OnTickValueChanging(value);
                ReportPropertyChanging("TickValue");
                _TickValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TickValue");
                OnTickValueChanged();
            }
        }
        private global::System.Double _TickValue;
        partial void OnTickValueChanging(global::System.Double value);
        partial void OnTickValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DecimalPlace
        {
            get
            {
                return _DecimalPlace;
            }
            set
            {
                OnDecimalPlaceChanging(value);
                ReportPropertyChanging("DecimalPlace");
                _DecimalPlace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DecimalPlace");
                OnDecimalPlaceChanged();
            }
        }
        private global::System.Int64 _DecimalPlace;
        partial void OnDecimalPlaceChanging(global::System.Int64 value);
        partial void OnDecimalPlaceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_instrument_1", "instrument")]
        public EntityCollection<instrument> instrument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instrument>("myschemaModel.FK_instrument_1", "instrument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instrument>("myschemaModel.FK_instrument_1", "instrument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_GroupID", "instrument_type_group")]
        public instrument_type_group instrument_type_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type_group>("myschemaModel.FK_GroupID", "instrument_type_group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type_group>("myschemaModel.FK_GroupID", "instrument_type_group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instrument_type_group> instrument_type_groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type_group>("myschemaModel.FK_GroupID", "instrument_type_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instrument_type_group>("myschemaModel.FK_GroupID", "instrument_type_group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_limit_2", "limit")]
        public EntityCollection<limit> limit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<limit>("myschemaModel.FK_limit_2", "limit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<limit>("myschemaModel.FK_limit_2", "limit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_rating_2", "rating")]
        public EntityCollection<rating> rating
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<rating>("myschemaModel.FK_rating_2", "rating");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<rating>("myschemaModel.FK_rating_2", "rating", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="instrument_type_group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class instrument_type_group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new instrument_type_group object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static instrument_type_group Createinstrument_type_group(global::System.Int64 id, global::System.String code, global::System.DateTime lastModified)
        {
            instrument_type_group instrument_type_group = new instrument_type_group();
            instrument_type_group.ID = id;
            instrument_type_group.Code = code;
            instrument_type_group.LastModified = lastModified;
            return instrument_type_group;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_GroupID", "instrument_type")]
        public EntityCollection<instrument_type> instrument_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<instrument_type>("myschemaModel.FK_GroupID", "instrument_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<instrument_type>("myschemaModel.FK_GroupID", "instrument_type", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_instrument_subscription_2", "user_instrument_subscription")]
        public EntityCollection<user_instrument_subscription> user_instrument_subscription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_instrument_subscription>("myschemaModel.FK_user_instrument_subscription_2", "user_instrument_subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_instrument_subscription>("myschemaModel.FK_user_instrument_subscription_2", "user_instrument_subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="limit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class limit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new limit object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="instrumentTypeID">Initial value of the InstrumentTypeID property.</param>
        /// <param name="maxOrderSize">Initial value of the MaxOrderSize property.</param>
        /// <param name="positionLimit">Initial value of the PositionLimit property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static limit Createlimit(global::System.Int64 id, global::System.Int64 accountID, global::System.Int64 instrumentTypeID, global::System.Int32 maxOrderSize, global::System.Int32 positionLimit, global::System.DateTime lastModified)
        {
            limit limit = new limit();
            limit.ID = id;
            limit.AccountID = accountID;
            limit.InstrumentTypeID = instrumentTypeID;
            limit.MaxOrderSize = maxOrderSize;
            limit.PositionLimit = positionLimit;
            limit.LastModified = lastModified;
            return limit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int64 _AccountID;
        partial void OnAccountIDChanging(global::System.Int64 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InstrumentTypeID
        {
            get
            {
                return _InstrumentTypeID;
            }
            set
            {
                OnInstrumentTypeIDChanging(value);
                ReportPropertyChanging("InstrumentTypeID");
                _InstrumentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstrumentTypeID");
                OnInstrumentTypeIDChanged();
            }
        }
        private global::System.Int64 _InstrumentTypeID;
        partial void OnInstrumentTypeIDChanging(global::System.Int64 value);
        partial void OnInstrumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxOrderSize
        {
            get
            {
                return _MaxOrderSize;
            }
            set
            {
                OnMaxOrderSizeChanging(value);
                ReportPropertyChanging("MaxOrderSize");
                _MaxOrderSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxOrderSize");
                OnMaxOrderSizeChanged();
            }
        }
        private global::System.Int32 _MaxOrderSize;
        partial void OnMaxOrderSizeChanging(global::System.Int32 value);
        partial void OnMaxOrderSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PositionLimit
        {
            get
            {
                return _PositionLimit;
            }
            set
            {
                OnPositionLimitChanging(value);
                ReportPropertyChanging("PositionLimit");
                _PositionLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PositionLimit");
                OnPositionLimitChanged();
            }
        }
        private global::System.Int32 _PositionLimit;
        partial void OnPositionLimitChanging(global::System.Int32 value);
        partial void OnPositionLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_limit_1", "account")]
        public account account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("myschemaModel.FK_limit_1", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("myschemaModel.FK_limit_1", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("myschemaModel.FK_limit_1", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("myschemaModel.FK_limit_1", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_limit_2", "instrument_type")]
        public instrument_type instrument_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_limit_2", "instrument_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_limit_2", "instrument_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instrument_type> instrument_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_limit_2", "instrument_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instrument_type>("myschemaModel.FK_limit_2", "instrument_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="organisation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class organisation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new organisation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        /// <param name="parentOrgID">Initial value of the ParentOrgID property.</param>
        public static organisation Createorganisation(global::System.Int32 id, global::System.DateTime lastModified, global::System.Int64 parentOrgID)
        {
            organisation organisation = new organisation();
            organisation.ID = id;
            organisation.LastModified = lastModified;
            organisation.ParentOrgID = parentOrgID;
            return organisation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostCode
        {
            get
            {
                return _PostCode;
            }
            set
            {
                OnPostCodeChanging(value);
                ReportPropertyChanging("PostCode");
                _PostCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostCode");
                OnPostCodeChanged();
            }
        }
        private global::System.String _PostCode;
        partial void OnPostCodeChanging(global::System.String value);
        partial void OnPostCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ParentOrgID
        {
            get
            {
                return _ParentOrgID;
            }
            set
            {
                OnParentOrgIDChanging(value);
                ReportPropertyChanging("ParentOrgID");
                _ParentOrgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentOrgID");
                OnParentOrgIDChanged();
            }
        }
        private global::System.Int64 _ParentOrgID;
        partial void OnParentOrgIDChanging(global::System.Int64 value);
        partial void OnParentOrgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentAccountID
        {
            get
            {
                return _ParentAccountID;
            }
            set
            {
                OnParentAccountIDChanging(value);
                ReportPropertyChanging("ParentAccountID");
                _ParentAccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentAccountID");
                OnParentAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentAccountID;
        partial void OnParentAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentAccountIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_account_group_1", "account_group")]
        public EntityCollection<account_group> account_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account_group>("myschemaModel.FK_account_group_1", "account_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account_group>("myschemaModel.FK_account_group_1", "account_group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="rating")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rating : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new rating object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static rating Createrating(global::System.Int32 id, global::System.DateTime lastModified)
        {
            rating rating = new rating();
            rating.ID = id;
            rating.LastModified = lastModified;
            return rating;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountGroupID
        {
            get
            {
                return _AccountGroupID;
            }
            set
            {
                OnAccountGroupIDChanging(value);
                ReportPropertyChanging("AccountGroupID");
                _AccountGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountGroupID");
                OnAccountGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountGroupID;
        partial void OnAccountGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InstrumentTypeID
        {
            get
            {
                return _InstrumentTypeID;
            }
            set
            {
                OnInstrumentTypeIDChanging(value);
                ReportPropertyChanging("InstrumentTypeID");
                _InstrumentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstrumentTypeID");
                OnInstrumentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InstrumentTypeID;
        partial void OnInstrumentTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnInstrumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MarginRatio
        {
            get
            {
                return _MarginRatio;
            }
            set
            {
                OnMarginRatioChanging(value);
                ReportPropertyChanging("MarginRatio");
                _MarginRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginRatio");
                OnMarginRatioChanged();
            }
        }
        private Nullable<global::System.Decimal> _MarginRatio;
        partial void OnMarginRatioChanging(Nullable<global::System.Decimal> value);
        partial void OnMarginRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MarginAdjustment
        {
            get
            {
                return _MarginAdjustment;
            }
            set
            {
                OnMarginAdjustmentChanging(value);
                ReportPropertyChanging("MarginAdjustment");
                _MarginAdjustment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginAdjustment");
                OnMarginAdjustmentChanged();
            }
        }
        private Nullable<global::System.Decimal> _MarginAdjustment;
        partial void OnMarginAdjustmentChanging(Nullable<global::System.Decimal> value);
        partial void OnMarginAdjustmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionRatio
        {
            get
            {
                return _CommissionRatio;
            }
            set
            {
                OnCommissionRatioChanging(value);
                ReportPropertyChanging("CommissionRatio");
                _CommissionRatio = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionRatio");
                OnCommissionRatioChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionRatio;
        partial void OnCommissionRatioChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionRatioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommissionAdjustment
        {
            get
            {
                return _CommissionAdjustment;
            }
            set
            {
                OnCommissionAdjustmentChanging(value);
                ReportPropertyChanging("CommissionAdjustment");
                _CommissionAdjustment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommissionAdjustment");
                OnCommissionAdjustmentChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommissionAdjustment;
        partial void OnCommissionAdjustmentChanging(Nullable<global::System.Decimal> value);
        partial void OnCommissionAdjustmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_rating_1", "account_group")]
        public account_group account_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_rating_1", "account_group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_rating_1", "account_group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account_group> account_groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_rating_1", "account_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account_group>("myschemaModel.FK_rating_1", "account_group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_rating_2", "instrument_type")]
        public instrument_type instrument_type
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_rating_2", "instrument_type").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_rating_2", "instrument_type").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instrument_type> instrument_typeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type>("myschemaModel.FK_rating_2", "instrument_type");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instrument_type>("myschemaModel.FK_rating_2", "instrument_type", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="routing_rule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class routing_rule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new routing_rule object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static routing_rule Createrouting_rule(global::System.Int32 id, global::System.DateTime lastModified)
        {
            routing_rule routing_rule = new routing_rule();
            routing_rule.ID = id;
            routing_rule.LastModified = lastModified;
            return routing_rule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RoutingID
        {
            get
            {
                return _RoutingID;
            }
            set
            {
                OnRoutingIDChanging(value);
                ReportPropertyChanging("RoutingID");
                _RoutingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoutingID");
                OnRoutingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RoutingID;
        partial void OnRoutingIDChanging(Nullable<global::System.Int32> value);
        partial void OnRoutingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ExchangeID
        {
            get
            {
                return _ExchangeID;
            }
            set
            {
                OnExchangeIDChanging(value);
                ReportPropertyChanging("ExchangeID");
                _ExchangeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeID");
                OnExchangeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ExchangeID;
        partial void OnExchangeIDChanging(Nullable<global::System.Int64> value);
        partial void OnExchangeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountGroupID
        {
            get
            {
                return _AccountGroupID;
            }
            set
            {
                OnAccountGroupIDChanging(value);
                ReportPropertyChanging("AccountGroupID");
                _AccountGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountGroupID");
                OnAccountGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountGroupID;
        partial void OnAccountGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_routing_rule_1", "account_group")]
        public account_group account_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_routing_rule_1", "account_group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_routing_rule_1", "account_group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account_group> account_groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account_group>("myschemaModel.FK_routing_rule_1", "account_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account_group>("myschemaModel.FK_routing_rule_1", "account_group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_routing_rule_2", "exchange")]
        public exchange exchange
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<exchange>("myschemaModel.FK_routing_rule_2", "exchange").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<exchange>("myschemaModel.FK_routing_rule_2", "exchange").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<exchange> exchangeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<exchange>("myschemaModel.FK_routing_rule_2", "exchange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<exchange>("myschemaModel.FK_routing_rule_2", "exchange", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="enable">Initial value of the Enable property.</param>
        /// <param name="block">Initial value of the Block property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static user Createuser(global::System.Int64 id, global::System.String password, global::System.Int16 enable, global::System.Int16 block, global::System.DateTime lastModified)
        {
            user user = new user();
            user.ID = id;
            user.Password = password;
            user.Enable = enable;
            user.Block = block;
            user.LastModified = lastModified;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Enable
        {
            get
            {
                return _Enable;
            }
            set
            {
                OnEnableChanging(value);
                ReportPropertyChanging("Enable");
                _Enable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enable");
                OnEnableChanged();
            }
        }
        private global::System.Int16 _Enable;
        partial void OnEnableChanging(global::System.Int16 value);
        partial void OnEnableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Block
        {
            get
            {
                return _Block;
            }
            set
            {
                OnBlockChanging(value);
                ReportPropertyChanging("Block");
                _Block = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Block");
                OnBlockChanged();
            }
        }
        private global::System.Int16 _Block;
        partial void OnBlockChanging(global::System.Int16 value);
        partial void OnBlockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DefaultAccountID
        {
            get
            {
                return _DefaultAccountID;
            }
            set
            {
                OnDefaultAccountIDChanging(value);
                ReportPropertyChanging("DefaultAccountID");
                _DefaultAccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DefaultAccountID");
                OnDefaultAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DefaultAccountID;
        partial void OnDefaultAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnDefaultAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Online
        {
            get
            {
                return _Online;
            }
            set
            {
                OnOnlineChanging(value);
                ReportPropertyChanging("Online");
                _Online = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Online");
                OnOnlineChanged();
            }
        }
        private Nullable<global::System.Int16> _Online;
        partial void OnOnlineChanging(Nullable<global::System.Int16> value);
        partial void OnOnlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParentAccountID
        {
            get
            {
                return _ParentAccountID;
            }
            set
            {
                OnParentAccountIDChanging(value);
                ReportPropertyChanging("ParentAccountID");
                _ParentAccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentAccountID");
                OnParentAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParentAccountID;
        partial void OnParentAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnParentAccountIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_account_relation_1", "user_account_relation")]
        public EntityCollection<user_account_relation> user_account_relation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_account_relation>("myschemaModel.FK_user_account_relation_1", "user_account_relation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_account_relation>("myschemaModel.FK_user_account_relation_1", "user_account_relation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_instrument_subscription_1", "user_instrument_subscription")]
        public EntityCollection<user_instrument_subscription> user_instrument_subscription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user_instrument_subscription>("myschemaModel.FK_user_instrument_subscription_1", "user_instrument_subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user_instrument_subscription>("myschemaModel.FK_user_instrument_subscription_1", "user_instrument_subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="user_account_relation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user_account_relation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user_account_relation object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static user_account_relation Createuser_account_relation(global::System.Int64 id, global::System.Int64 userID, global::System.Int64 accountID, global::System.DateTime lastModified)
        {
            user_account_relation user_account_relation = new user_account_relation();
            user_account_relation.ID = id;
            user_account_relation.UserID = userID;
            user_account_relation.AccountID = accountID;
            user_account_relation.LastModified = lastModified;
            return user_account_relation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int64 _UserID;
        partial void OnUserIDChanging(global::System.Int64 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Int64 _AccountID;
        partial void OnAccountIDChanging(global::System.Int64 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_account_relation_2", "account")]
        public account account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("myschemaModel.FK_user_account_relation_2", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("myschemaModel.FK_user_account_relation_2", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("myschemaModel.FK_user_account_relation_2", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("myschemaModel.FK_user_account_relation_2", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_account_relation_1", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("myschemaModel.FK_user_account_relation_1", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("myschemaModel.FK_user_account_relation_1", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("myschemaModel.FK_user_account_relation_1", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("myschemaModel.FK_user_account_relation_1", "user", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="myschemaModel", Name="user_instrument_subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user_instrument_subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user_instrument_subscription object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="lastModified">Initial value of the LastModified property.</param>
        public static user_instrument_subscription Createuser_instrument_subscription(global::System.Int64 id, global::System.Int64 userID, global::System.DateTime lastModified)
        {
            user_instrument_subscription user_instrument_subscription = new user_instrument_subscription();
            user_instrument_subscription.ID = id;
            user_instrument_subscription.UserID = userID;
            user_instrument_subscription.LastModified = lastModified;
            return user_instrument_subscription;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int64 _UserID;
        partial void OnUserIDChanging(global::System.Int64 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InstrumentTypeGroupID
        {
            get
            {
                return _InstrumentTypeGroupID;
            }
            set
            {
                OnInstrumentTypeGroupIDChanging(value);
                ReportPropertyChanging("InstrumentTypeGroupID");
                _InstrumentTypeGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstrumentTypeGroupID");
                OnInstrumentTypeGroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InstrumentTypeGroupID;
        partial void OnInstrumentTypeGroupIDChanging(Nullable<global::System.Int64> value);
        partial void OnInstrumentTypeGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastModified
        {
            get
            {
                return _LastModified;
            }
            set
            {
                OnLastModifiedChanging(value);
                ReportPropertyChanging("LastModified");
                _LastModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastModified");
                OnLastModifiedChanged();
            }
        }
        private global::System.DateTime _LastModified;
        partial void OnLastModifiedChanging(global::System.DateTime value);
        partial void OnLastModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_instrument_subscription_2", "instrument_type_group")]
        public instrument_type_group instrument_type_group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type_group>("myschemaModel.FK_user_instrument_subscription_2", "instrument_type_group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type_group>("myschemaModel.FK_user_instrument_subscription_2", "instrument_type_group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<instrument_type_group> instrument_type_groupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<instrument_type_group>("myschemaModel.FK_user_instrument_subscription_2", "instrument_type_group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<instrument_type_group>("myschemaModel.FK_user_instrument_subscription_2", "instrument_type_group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("myschemaModel", "FK_user_instrument_subscription_1", "user")]
        public user user
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("myschemaModel.FK_user_instrument_subscription_1", "user").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("myschemaModel.FK_user_instrument_subscription_1", "user").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<user> userReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("myschemaModel.FK_user_instrument_subscription_1", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("myschemaModel.FK_user_instrument_subscription_1", "user", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
